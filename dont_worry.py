import telebot
from telebot import types
import random
import json
import re

TOKEN = "8145099453:AAF8si672FAE2SB5TN-mQOgm4GKi6jj0M20"

bot = telebot.TeleBot(TOKEN)

def load_profiles(filename="profiles.json"):
    try:
        with open(filename, "r", encoding="utf-8") as file:
            return json.load(file)
    except FileNotFoundError:
        return {}  # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å
      
def save_profiles(profile, filename="profiles.json"):
    with open(filename, "w", encoding="utf-8") as file:
        json.dump(profile, file, ensure_ascii=False, indent=4)
    
def create_profiles(user_id, name, profile):
    if str(user_id) not in profile:
        profile[str(user_id)] = {
            "name": name,
            "level": 1,
            "iron": 4,
            "copper": 2,
            "gold": 15,
            "energy": 30,
            "xp": 0
        }
        save_profiles(profile)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

def get_profiles(user_id, profile):
    return profile.get(str(user_id))
    

def update_profiles(user_id, key, value, profile):
    if str(user_id) in profile:
        profile[str(user_id)][key] = value
        save_profiles(profile)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

def start_keyboard():
    keyboard= types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons =[
        types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—å"),
        types.KeyboardButton("–ö—É–∑–Ω–∏—Ü–∞"),
        types.KeyboardButton("–®–∞—Ö—Ç–∞"),
        types.KeyboardButton("–ú–∞–≥–∞–∑–∏–Ω")]
    for button in buttons:
        keyboard.add(button) #–¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    return keyboard  

def calculate_level(xp):
    level = 1
    xp_required = 20 

    while xp >= xp_required:
        level += 1
        xp_required += xp_required * 1.5  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–æ—Ä–æ–≥ –Ω–∞ 50% –∫–∞–∂–¥—ã–π —Ä–∞–∑

    return level

def update_level(user_id, xp_earned, profiles):
    profile = profiles.get(str(user_id))
    profile["xp"] += xp_earned
    new_level = calculate_level(profile["xp"])

    if new_level > profile["level"]:
        profile["level"] = new_level
        bot.send_message(user_id, f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ —É—Ä–æ–≤–Ω—è {new_level}!")

    update_profiles(user_id, "xp", profile["xp"], profiles)

profiles = load_profiles()  
user_last_keyboards = {}

@bot.message_handler(commands=['start'])
def welcome(message):
    keyboard= start_keyboard()
        
    profile = get_profiles(message.from_user.id, profiles)

    if profile == None:
        create_profiles(message.from_user.id, message.from_user.first_name, profiles)

    text = ("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫—É–∑–Ω–∏—Ü—É, –≤—ã–±–µ—Ä–∏, —á–µ–º –∑–∞–π–º–µ–º—Å—è\n"
            "1. –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–∫–∞–∂–µ—Ç —Ç–≤–æ–∏ —Ä–µ—Å—É—Ä—Å—ã\n"
            "2. –í –∫—É–∑–Ω–∏—Ü–µ —Ç—ã —Å–æ–∑–¥–∞—à—å –æ—Ä—É–∂–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É\n"
            "3. –í —à–∞—Ö—Ç–µ –º–æ–∂–Ω–æ –¥–æ–±—ã–≤–∞—Ç—å –∂–µ–ª–µ–∑–æ –∏ –º–µ–¥—å\n"
            "4. –í –º–∞–≥–∞–∑–∏–Ω–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é, –∂–µ–ª–µ–∑–æ –∏–ª–∏ –º–µ–¥—å")
    
    bot.send_message(message.chat.id, text, reply_markup=keyboard)

@bot.message_handler(func=lambda m: m.text == "–ü—Ä–æ—Ñ–∏–ª—å")
def profile(message):
    profile = get_profiles(message.from_user.id, profiles)
    text = (
        f"üë§ –ò–º—è: {profile['name']}\n"
        f"‚öôÔ∏è –£—Ä–æ–≤–µ–Ω—å: {profile['level']}\n"
        f"üî© –ñ–µ–ª–µ–∑–æ: {profile['iron']}\n"
        f"üî© –ú–µ–¥—å: {profile['copper']}\n"
        f"üí∞ –ó–æ–ª–æ—Ç–æ: {profile['gold']}\n"
        f"‚ö° –≠–Ω–µ—Ä–≥–∏—è: {profile['energy']}\n"
        f"üìà –û–ø—ã—Ç: {profile['xp']}"
    )
    bot.send_message(message.chat.id, text)


weapons = [
    {"name": "–ú–µ—á", "iron": 3, "gold": 15},
    {"name": "–ú–æ–ª–æ—Ç", "iron": 4, "gold": 25},
    {"name": "–©–∏—Ç", "iron": 6, "copper": 2, "gold": 30},
    {"name": "–ö–∏–Ω–∂–∞–ª", "iron": 1, "copper": 1, "gold": 10},
    {"name": "–¢–æ–ø–æ—Ä", "iron": 3, "copper": 2, "gold": 25}
]
   
@bot.message_handler(func=lambda m: m.text == "–ö—É–∑–Ω–∏—Ü–∞")#–≤—ã–±–æ—Ä –æ—Ä—É–∂–∏—è –¥–ª—è –∫—Ä–∞—Ñ—Ç–∞
def blacksmithing(message):
    profile = get_profiles(message.from_user.id, profiles)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç—Ä–µ—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª 
    random_numbers = random.sample(range(len(weapons)), 3)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

    for i in random_numbers:
        weapon = weapons[i]

        resources_text = "–ñ–µ–ª–µ–∑–æ"
        if 'copper' in weapon:
            resources_text += ", –ú–µ–¥—å"
        
        button_text = f"{weapon['name']}: —Ç—Ä–µ–±—É—é—Ç—Å—è {resources_text}"
        keyboard.add(types.KeyboardButton(button_text))
    
    keyboard.add(types.KeyboardButton("–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"))
    user_last_keyboards[message.from_user.id] = keyboard #—Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∞–≤—É, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è
    text = ("–¢–≤–æ–∏ —Ä–µ—Å—É—Ä—Å—ã:\n"
        f"‚öôÔ∏è –£—Ä–æ–≤–µ–Ω—å: {profile['level']}\n"
        f"üî© –ñ–µ–ª–µ–∑–æ: {profile['iron']}\n"
        f"üî© –ú–µ–¥—å: {profile['copper']}\n"
        f"üí∞ –ó–æ–ª–æ—Ç–æ: {profile['gold']}\n"
        "–ß—Ç–æ —Å–æ–∑–¥–∞–µ–º?\n"
    )
    bot.send_message(message.chat.id, text, reply_markup=keyboard)
    


@bot.message_handler(func=lambda m: any(weapon["name"] in m.text for weapon in weapons))#–≤—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è –æ—Ä—É–∂–∏—è
def select_weapon_level(message):
    profile = get_profiles(message.from_user.id, profiles)
    user_level = profile['level']

    for weapon in weapons: #–∫–∞–∫–æ–µ –æ—Ä—É–∂–∏–µ –≤—ã–±—Ä–∞–Ω–æ
        if weapon["name"] in message.text:
            selected_weapon = weapon
            break

    if selected_weapon:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        weapon_levels = [
            user_level - 1 if user_level > 1 else 0,
            user_level,
            user_level + 1]

        #–±–æ–Ω—É—Å—ã –∑–∞ —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä–æ–∫–∞
        required_iron = int(selected_weapon.get("iron", 0) - user_level*4/3)
        if 'copper' in selected_weapon:
            required_copper = int(selected_weapon.get("copper", 0) - user_level*4/3)
        earned_gold = int(selected_weapon.get("gold", 0) - user_level*4/3) 

        #–≤—ã–±–æ—Ä —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –∑–æ–ª–æ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
        increment_resource = 0
        increment_gold = 0
        for lvl in weapon_levels:
            if lvl !=0 :#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω—É–ª–µ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è –æ—Ä—É–∂–∏—è
                required_iron = selected_weapon["iron"] + (lvl * 3) + increment_resource
                if 'copper' in selected_weapon:
                    required_copper = int(selected_weapon["copper"] + ((lvl * 3)/2)) + increment_resource
                earned_gold = selected_weapon["gold"] + (lvl * 3) + 12 + increment_gold

                button_text = f"–£—Ä. {lvl} –ó–æ–ª–æ—Ç–æ: {earned_gold}, –ñ–µ–ª–µ–∑–æ: {required_iron}"
                if 'copper' in selected_weapon:
                    button_text += f", –ú–µ–¥—å: {required_copper}"
                keyboard.add(types.KeyboardButton(button_text))
                increment_gold += 13
                increment_resource +=4


        keyboard.add(types.KeyboardButton("–ù–∞–∑–∞–¥"))
        keyboard.add(types.KeyboardButton("–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å", reply_markup=keyboard)
    else:
        bot.send_message(message.chat.id, "–û—Ä—É–∂–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")


@bot.message_handler(func=lambda m: "–£—Ä." in m.text)  # –ö—Ä–∞—Ñ—Ç
def craft_weapon(message):
    profile = get_profiles(message.from_user.id, profiles)
    button_text = message.text

    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –º–µ–¥—å—é
    match = re.match(r"–£—Ä\. (\d+) –ó–æ–ª–æ—Ç–æ: (\d+), –ñ–µ–ª–µ–∑–æ: (\d+)(?:, –ú–µ–¥—å: (\d+))?", button_text)
    
    weapon_level = int(match.group(1))
    earned_gold = int(match.group(2)) 
    required_iron = int(match.group(3)) 
    required_copper = int(match.group(4)) if match.group(4) else 0  # –¢—Ä–µ–±—É–µ–º–∞—è –º–µ–¥—å (–µ—Å–ª–∏ –µ—Å—Ç—å)

    if (profile["iron"] >= required_iron and
        (required_copper == 0 or profile["copper"] >= required_copper)):

        # –£–º–µ–Ω—å—à–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
        profile["iron"] -= required_iron
        if required_copper > 0:  # –ï—Å–ª–∏ –º–µ–¥—å —Ç—Ä–µ–±—É–µ—Ç—Å—è
            profile["copper"] -= required_copper
        profile["gold"] += earned_gold

        xp_reward = 10 + (weapon_level * 2)
        profile["xp"] += xp_reward
        update_level(message.from_user.id, xp_reward, profiles)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
        update_profiles(message.from_user.id, "iron", profile["iron"], profiles)
        if required_copper > 0:  # –ï—Å–ª–∏ –º–µ–¥—å –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞
            update_profiles(message.from_user.id, "copper", profile["copper"], profiles)
        update_profiles(message.from_user.id, "gold", profile["gold"], profiles)
        update_profiles(message.from_user.id, "xp", profile["xp"], profiles)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        bot.send_message(message.chat.id, 
                         f"‚úÖ –£—Å–ø–µ—Ö!\n"
                         f"‚ö° –ó–∞—Ç—Ä–∞—á–µ–Ω–æ: –ñ–µ–ª–µ–∑–æ {required_iron}, –ú–µ–¥—å {required_copper}\n"
                         f"üéÅ –ü–æ–ª—É—á–µ–Ω–æ: {earned_gold} –∑–æ–ª–æ—Ç–∞ –∏ {xp_reward} –æ–ø—ã—Ç–∞")
    else:
        # –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å–æ–≤ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç
        bot.send_message(message.chat.id, 
                         f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤!\n"
                         f"üî© –ù—É–∂–Ω–æ: –ñ–µ–ª–µ–∑–æ {required_iron}, –ú–µ–¥—å {required_copper}\n"
                         f"üì¶ –£ –≤–∞—Å: –ñ–µ–ª–µ–∑–æ {profile['iron']}, –ú–µ–¥—å {profile['copper']}")

@bot.message_handler(func=lambda m: m.text == "–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é")
def exit_back(message):
    keyboard = start_keyboard() 
    text = ("–í—ã–±–µ—Ä–∏, —á–µ–º –∑–∞–π–º–µ–º—Å—è\n"
        "1. –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–∫–∞–∂–µ—Ç —Ç–≤–æ–∏ —Ä–µ—Å—É—Ä—Å—ã\n"
        "2. –í –∫—É–∑–Ω–∏—Ü–µ —Ç—ã —Å–æ–∑–¥–∞—à—å –æ—Ä—É–∂–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É\n"
        "3. –í —à–∞—Ö—Ç–µ –º–æ–∂–Ω–æ –¥–æ–±—ã–≤–∞—Ç—å –∂–µ–ª–µ–∑–æ –∏ –º–µ–¥—å\n"
        "4. –í –º–∞–≥–∞–∑–∏–Ω–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é, –∂–µ–ª–µ–∑–æ –∏–ª–∏ –º–µ–¥—å")

    bot.send_message(message.chat.id, text, reply_markup=keyboard)

@bot.message_handler(func=lambda m: m.text == "–ù–∞–∑–∞–¥")
def back(message):
    last_keyboard = user_last_keyboards.get(message.from_user.id)

    if last_keyboard:
        bot.send_message(message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥:", reply_markup=last_keyboard)
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.", reply_markup=start_keyboard())

# @bot.message_handler(func=lambda m: m.text=="–®–∞—Ö—Ç–∞" )

# @bot.message_handler(func=lambda m: m.text=="–ú–∞–≥–∞–∑–∏–Ω" )
    
if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    bot.polling(none_stop=True)