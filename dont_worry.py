import telebot
from telebot import types
import random
import json
import re

TOKEN = "8145099453:AAF8si672FAE2SB5TN-mQOgm4GKi6jj0M20"

bot = telebot.TeleBot(TOKEN)

def load_profiles(filename="profiles.json"):
    try:
        with open(filename, "r", encoding="utf-8") as file:
            return json.load(file)
    except FileNotFoundError:
        return {}  # –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å
      
def save_profiles(profile, filename="profiles.json"):
    with open(filename, "w", encoding="utf-8") as file:
        json.dump(profile, file, ensure_ascii=False, indent=4)
    
def create_profiles(user_id, name, profile):
    if str(user_id) not in profile:
        profile[str(user_id)] = {
            "name": name,
            "level": 1,
            "iron": 9,
            "copper": 5,
            "gold": 30,
            "energy": 50,
            "xp": 0
        }
        save_profiles(profile)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

def get_profiles(user_id, profile):
    return profile.get(str(user_id))
    

def update_profiles(user_id, key, value, profile):
    if str(user_id) in profile:
        profile[str(user_id)][key] = value
        save_profiles(profile)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

def start_keyboard():
    keyboard= types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons =[
        types.KeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å"),
        types.KeyboardButton("‚öôÔ∏è –ö—É–∑–Ω–∏—Ü–∞"),
        types.KeyboardButton("‚õèÔ∏è –®–∞—Ö—Ç–∞"),
        types.KeyboardButton("üõí –ú–∞–≥–∞–∑–∏–Ω")]
    for button in buttons:
        keyboard.add(button) #–¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
    return keyboard  

def calculate_level(xp):
    level = 1
    xp_required = 20 

    while xp >= xp_required:
        level += 1
        xp_required += xp_required * 1.5  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–æ—Ä–æ–≥ –Ω–∞ 50% –∫–∞–∂–¥—ã–π —Ä–∞–∑

    return level

def update_level(user_id, xp_earned, profiles):
    profile = profiles.get(str(user_id))
    profile["xp"] += xp_earned
    new_level = calculate_level(profile["xp"])

    if new_level > profile["level"]:
        profile["level"] = new_level
        bot.send_message(user_id, f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ —É—Ä–æ–≤–Ω—è {new_level}!")

    update_profiles(user_id, "xp", profile["xp"], profiles)

profiles = load_profiles()  
user_last_keyboards = {}

@bot.message_handler(commands=['start'])
def welcome(message):
    keyboard= start_keyboard()
        
    profile = get_profiles(message.from_user.id, profiles)

    if profile == None:
        create_profiles(message.from_user.id, message.from_user.first_name, profiles)

    text = ("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫—É–∑–Ω–∏—Ü—É, –≤—ã–±–µ—Ä–∏, —á–µ–º –∑–∞–π–º–µ–º—Å—è\n"
            "1. –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–∫–∞–∂–µ—Ç —Ç–≤–æ–∏ —Ä–µ—Å—É—Ä—Å—ã\n"
            "2. –í –∫—É–∑–Ω–∏—Ü–µ —Ç—ã —Å–æ–∑–¥–∞—à—å –æ—Ä—É–∂–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É\n"
            "3. –í —à–∞—Ö—Ç–µ –º–æ–∂–Ω–æ –¥–æ–±—ã–≤–∞—Ç—å –∂–µ–ª–µ–∑–æ –∏ –º–µ–¥—å\n"
            "4. –í –º–∞–≥–∞–∑–∏–Ω–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é, –∂–µ–ª–µ–∑–æ –∏–ª–∏ –º–µ–¥—å")
    
    bot.send_message(message.chat.id, text, reply_markup=keyboard)

@bot.message_handler(func=lambda m: m.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
def profile(message):
    profile = get_profiles(message.from_user.id, profiles)
    text = (
        f"üë§ –ò–º—è: {profile['name']}\n"
        f"‚öôÔ∏è –£—Ä–æ–≤–µ–Ω—å: {profile['level']}\n"
        f"üî© –ñ–µ–ª–µ–∑–æ: {profile['iron']}\n"
        f"üü† –ú–µ–¥—å: {profile['copper']}\n"
        f"üí∞ –ó–æ–ª–æ—Ç–æ: {profile['gold']}\n"
        f"‚ö° –≠–Ω–µ—Ä–≥–∏—è: {profile['energy']}\n"
        f"üìà –û–ø—ã—Ç: {profile['xp']}"
    )
    bot.send_message(message.chat.id, text)


weapons = [
    {"name": "–ú–µ—á", "iron": 3, "gold": 15},
    {"name": "–ú–æ–ª–æ—Ç", "iron": 4, "gold": 25},
    {"name": "–©–∏—Ç", "iron": 6, "copper": 2, "gold": 30},
    {"name": "–ö–∏–Ω–∂–∞–ª", "iron": 1, "copper": 1, "gold": 10},
    {"name": "–¢–æ–ø–æ—Ä", "iron": 3, "copper": 2, "gold": 25}
]
   
@bot.message_handler(func=lambda m: m.text == "‚öôÔ∏è –ö—É–∑–Ω–∏—Ü–∞")#–≤—ã–±–æ—Ä –æ—Ä—É–∂–∏—è –¥–ª—è –∫—Ä–∞—Ñ—Ç–∞
def blacksmithing(message):
    profile = get_profiles(message.from_user.id, profiles)

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç—Ä–µ—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª 
    random_numbers = random.sample(range(len(weapons)), 3)
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)

    for i in random_numbers:
        weapon = weapons[i]

        resources_text = "–ñ–µ–ª–µ–∑–æ"
        if 'copper' in weapon:
            resources_text += ", –ú–µ–¥—å"
        
        button_text = f"{weapon['name']}: —Ç—Ä–µ–±—É—é—Ç—Å—è {resources_text}"
        keyboard.add(types.KeyboardButton(button_text))
    
    keyboard.add(types.KeyboardButton("–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"))
    user_last_keyboards[message.from_user.id] = keyboard #—Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª–∞–≤—É, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è
    text = ("–¢–≤–æ–∏ —Ä–µ—Å—É—Ä—Å—ã:\n"
        f"‚öôÔ∏è –£—Ä–æ–≤–µ–Ω—å: {profile['level']}\n"
        f"üî© –ñ–µ–ª–µ–∑–æ: {profile['iron']}\n"
        f"üü† –ú–µ–¥—å: {profile['copper']}\n"
        f"üí∞ –ó–æ–ª–æ—Ç–æ: {profile['gold']}\n"
        "–ß—Ç–æ —Å–æ–∑–¥–∞–µ–º?\n"
    )
    bot.send_message(message.chat.id, text, reply_markup=keyboard)
    


@bot.message_handler(func=lambda m: any(weapon["name"] in m.text for weapon in weapons))#–≤—ã–±–æ—Ä —É—Ä–æ–≤–Ω—è –æ—Ä—É–∂–∏—è
def select_weapon_level(message):
    profile = get_profiles(message.from_user.id, profiles)
    user_level = profile['level']

    for weapon in weapons: #–∫–∞–∫–æ–µ –æ—Ä—É–∂–∏–µ –≤—ã–±—Ä–∞–Ω–æ
        if weapon["name"] in message.text:
            selected_weapon = weapon
            break

    if selected_weapon:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        weapon_levels = [
            user_level - 1 if user_level > 1 else 0,
            user_level,
            user_level + 1]

        #–±–æ–Ω—É—Å—ã –∑–∞ —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä–æ–∫–∞
        required_iron = int(selected_weapon.get("iron", 0) - user_level*4/3)
        if 'copper' in selected_weapon:
            required_copper = int(selected_weapon.get("copper", 0) - user_level*4/3)
        earned_gold = int(selected_weapon.get("gold", 0) - user_level*4/3) 

        #–≤—ã–±–æ—Ä —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –∑–æ–ª–æ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
        increment_resource = 0
        increment_gold = 0
        for lvl in weapon_levels:
            if lvl !=0 :#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω—É–ª–µ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è –æ—Ä—É–∂–∏—è
                required_iron = selected_weapon["iron"] + (lvl * 3) + increment_resource
                if 'copper' in selected_weapon:
                    required_copper = int(selected_weapon["copper"] + ((lvl * 3)/2)) + increment_resource
                earned_gold = selected_weapon["gold"] + (lvl * 3) + 12 + increment_gold

                button_text = f"–£—Ä. {lvl} –ó–æ–ª–æ—Ç–æ: {earned_gold}, –ñ–µ–ª–µ–∑–æ: {required_iron}"
                if 'copper' in selected_weapon:
                    button_text += f", –ú–µ–¥—å: {required_copper}"
                keyboard.add(types.KeyboardButton(button_text))
                increment_gold += 13
                increment_resource +=4


        keyboard.add(types.KeyboardButton("–ù–∞–∑–∞–¥"))
        keyboard.add(types.KeyboardButton("–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å", reply_markup=keyboard)
    else:
        bot.send_message(message.chat.id, "–û—Ä—É–∂–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")


@bot.message_handler(func=lambda m: "–£—Ä." in m.text)  # –ö—Ä–∞—Ñ—Ç (–≤—ã–±—Ä–∞–ª–∏ —É—Ä–æ–≤–µ–Ω—å –æ—Ä—É–∂–∏—è)
def craft_weapon(message):
    profile = get_profiles(message.from_user.id, profiles)
    button_text = message.text
    user_level = profile['level']
    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    match = re.match(r"–£—Ä\. (\d+) –ó–æ–ª–æ—Ç–æ: (\d+), –ñ–µ–ª–µ–∑–æ: (\d+)(?:, –ú–µ–¥—å: (\d+))?", button_text)
    if not match:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–Ω–æ–ø–∫–∏.")
        return

    weapon_level = int(match.group(1))
    earned_gold = int(match.group(2)) 
    required_iron = int(match.group(3)) 
    required_copper = int(match.group(4)) if match.group(4) else 0  # –¢—Ä–µ–±—É–µ–º–∞—è –º–µ–¥—å (–µ—Å–ª–∏ –µ—Å—Ç—å)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
    if (profile["iron"] >= required_iron and
        (required_copper == 0 or profile["copper"] >= required_copper)):

        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–≥—Ä–æ–∫—É –≤—ã–±—Ä–∞—Ç—å —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 18
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 18:")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
        bot.register_next_step_handler(message, lambda m: check_number(m, weapon_level, user_level, earned_gold, required_iron, required_copper))
    else:
        # –ï—Å–ª–∏ —Ä–µ—Å—É—Ä—Å–æ–≤ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç
        bot.send_message(message.chat.id, 
                         f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤!\n"
                         f"üî© –ù—É–∂–Ω–æ: –ñ–µ–ª–µ–∑–æ {required_iron}, –ú–µ–¥—å {required_copper}\n"
                         f"üì¶ –£ –≤–∞—Å: –ñ–µ–ª–µ–∑–æ {profile['iron']}, –ú–µ–¥—å {profile['copper']}")

def check_number(message, weapon_level, user_level, earned_gold, required_iron, required_copper):
    try:
        player_number = int(message.text)
        if player_number < 1 or player_number > 18:
            bot.send_message(message.chat.id, "–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 18. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.")
            return
    except ValueError:
        bot.send_message(message.chat.id, "–≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.")
        return

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ –±–æ—Ç–æ–º
    bot_number = random.randint(1, 18)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä–æ–≥ –¥–ª—è —É—Å–ø–µ—Ö–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è –æ—Ä—É–∂–∏—è
    if weapon_level == user_level - 1 if user_level > 1 else 0:
        threshold = 7  # –®–∞–Ω—Å —É—Å–ø–µ—Ö–∞ ~77%
    elif weapon_level == user_level:
        threshold = 5  # –®–∞–Ω—Å —É—Å–ø–µ—Ö–∞ ~55%
    elif weapon_level == user_level + 1:
        threshold = 3  # –®–∞–Ω—Å —É—Å–ø–µ—Ö–∞ ~33%
    else:
        threshold = 5  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å–∫–æ–ª—å–∫–æ –±–ª–∏–∑–∫–æ —á–∏—Å–ª–æ –∏–≥—Ä–æ–∫–∞ –∫ —á–∏—Å–ª—É –±–æ—Ç–∞
    difference = abs(player_number - bot_number)
    if difference <= threshold:
        complete_craft(message, weapon_level, earned_gold, required_iron, required_copper, success = True)
    else:
        complete_craft(message, weapon_level, earned_gold, required_iron, required_copper, success = False)

def complete_craft(message, weapon_level, earned_gold, required_iron, required_copper, success=True):
    profile = get_profiles(message.from_user.id, profiles)

    if success:
        profile["iron"] -= required_iron
        if required_copper > 0:  # –ï—Å–ª–∏ –º–µ–¥—å —Ç—Ä–µ–±—É–µ—Ç—Å—è
            profile["copper"] -= required_copper
        profile["gold"] += earned_gold

        xp_reward = 10 + (weapon_level * profile['level'])
        update_level(message.from_user.id, xp_reward, profiles)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
        update_profiles(message.from_user.id, "iron", profile["iron"], profiles)
        if required_copper > 0:  # –ï—Å–ª–∏ –º–µ–¥—å –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞
            update_profiles(message.from_user.id, "copper", profile["copper"], profiles)
        update_profiles(message.from_user.id, "gold", profile["gold"], profiles)
        update_profiles(message.from_user.id, "xp", profile["xp"], profiles)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        bot.send_message(message.chat.id, 
                         f"‚úÖ –£—Å–ø–µ—Ö!\n"
                         f"‚ö° –ó–∞—Ç—Ä–∞—á–µ–Ω–æ: üî© –ñ–µ–ª–µ–∑–æ {required_iron}, üü† –ú–µ–¥—å {required_copper}\n"
                         f"üéÅ –ü–æ–ª—É—á–µ–Ω–æ: üí∞ {earned_gold} –∑–æ–ª–æ—Ç–∞ –∏ üìà {xp_reward} –æ–ø—ã—Ç–∞")
    else:
        # –í —Å–ª—É—á–∞–µ –Ω–µ—É–¥–∞—á–∏ –∑–∞–±–∏—Ä–∞–µ–º 3/5 —Ä–µ—Å—É—Ä—Å–æ–≤
        lost_iron = int(required_iron * 3 / 5)
        lost_copper = int(required_copper * 3 / 5) if required_copper > 0 else 0

        profile["iron"] -= lost_iron
        if required_copper > 0:  # –ï—Å–ª–∏ –º–µ–¥—å —Ç—Ä–µ–±—É–µ—Ç—Å—è
            profile["copper"] -= lost_copper

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
        update_profiles(message.from_user.id, "iron", profile["iron"], profiles)
        if required_copper > 0:  # –ï—Å–ª–∏ –º–µ–¥—å –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞
            update_profiles(message.from_user.id, "copper", profile["copper"], profiles)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ—É–¥–∞—á–µ
        bot.send_message(message.chat.id, 
                         f"‚ùå –ù–µ—É–¥–∞—á–∞!\n"
                         f"‚ö° –ü–æ—Ç–µ—Ä—è–Ω–æ: üî© –ñ–µ–ª–µ–∑–æ {lost_iron}, üü† –ú–µ–¥—å {lost_copper}\n"
                         f"üí∞ –ó–æ–ª–æ—Ç–æ –Ω–µ –Ω–∞—á–∏—Å–ª–µ–Ω–æ.")

@bot.message_handler(func=lambda m: m.text == "–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é")
def exit_back(message):
    keyboard = start_keyboard() 
    text = ("–í—ã–±–µ—Ä–∏, —á–µ–º –∑–∞–π–º–µ–º—Å—è\n"
        "1. –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–∫–∞–∂–µ—Ç —Ç–≤–æ–∏ —Ä–µ—Å—É—Ä—Å—ã\n"
        "2. –í –∫—É–∑–Ω–∏—Ü–µ —Ç—ã —Å–æ–∑–¥–∞—à—å –æ—Ä—É–∂–∏–µ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É\n"
        "3. –í —à–∞—Ö—Ç–µ –º–æ–∂–Ω–æ –¥–æ–±—ã–≤–∞—Ç—å –∂–µ–ª–µ–∑–æ –∏ –º–µ–¥—å\n"
        "4. –í –º–∞–≥–∞–∑–∏–Ω–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å —ç–Ω–µ—Ä–≥–∏—é, –∂–µ–ª–µ–∑–æ –∏–ª–∏ –º–µ–¥—å")

    bot.send_message(message.chat.id, text, reply_markup=keyboard)

@bot.message_handler(func=lambda m: m.text == "–ù–∞–∑–∞–¥")
def back(message):
    last_keyboard = user_last_keyboards.get(message.from_user.id)

    if last_keyboard:
        bot.send_message(message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥:", reply_markup=last_keyboard)
    else:
        bot.send_message(message.chat.id, "–ù–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.", reply_markup=start_keyboard())

@bot.message_handler(func=lambda m: m.text == "‚õèÔ∏è –®–∞—Ö—Ç–∞")
def mine(message):
    profile = get_profiles(message.from_user.id, profiles)
    
    if profile['energy'] < 4:
        bot.send_message(message.chat.id, "‚ö° –¢—ã —Å–ª–∏—à–∫–æ–º —É—Å—Ç–∞–ª!")
        return
    
    profile['energy'] -= 4
    update_profiles(message.from_user.id, "energy", profile['energy'], profiles)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –¥–æ–±—ã—á–∏
    success = random.choice([True, True, False])
    user_level = profile['level']
    if success: #–¥–æ–±—ã—á–∞
        iron_gained = random.randint(2 + user_level, 9 + user_level)
        copper_gained = random.randint(1 + user_level, 5 + user_level)  
        profile['iron'] += iron_gained
        profile['copper'] += copper_gained
        update_profiles(message.from_user.id, "iron", profile['iron'], profiles)
        update_profiles(message.from_user.id, "copper", profile['copper'], profiles)
        
        resulttext = f"‚õèÔ∏è –¢—ã –¥–æ–±—ã–ª üî© –∂–µ–ª–µ–∑–∞: {iron_gained} –∏ üü† –º–µ–¥–∏: {copper_gained}"
    else:
        failure_messages = [
            "‚õèÔ∏è –í —à–∞—Ö—Ç–µ –æ–±–≤–∞–ª! –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.",
            "‚õèÔ∏è –°–µ–≥–æ–¥–Ω—è –Ω–µ —Ç–≤–æ–π –¥–µ–Ω—å. –†—É–¥—ã —Å–æ–≤—Å–µ–º –Ω–µ –Ω–∞—à–ª–æ—Å—å.",
            "‚õèÔ∏è –í—Å–µ —Ç–≤–æ–∏ —Ä–µ—Å—É—Ä—Å—ã —É–∫—Ä–∞–ª–∏ —à–∞—Ö—Ç–µ—Ä—ã-—Ä–∞–∑–±–æ–π–Ω–∏–∫–∏."
        ]
        resulttext = random.choice(failure_messages)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    bot.send_message(message.chat.id, resulttext)

@bot.message_handler(func=lambda m: m.text == "üõí –ú–∞–≥–∞–∑–∏–Ω")
def shop(message):
    profile = get_profiles(message.from_user.id, profiles)
    
    # –¢–æ–≤–∞—Ä—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ
    shop_items = [
        {"name": "‚ö° –≠–Ω–µ—Ä–≥–∏—è", "price": 10, "key": "energy", "amount": 5},
        {"name": "üî© –ñ–µ–ª–µ–∑–æ", "price": 15, "key": "iron", "amount": 3},
        {"name": "üü† –ú–µ–¥—å", "price": 20, "key": "copper", "amount": 2}
    ]
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for item in shop_items:
        button_text = f"{item['name']} {item['amount']} - —Ü–µ–Ω–∞ {item['price']}"
        keyboard.add(types.KeyboardButton(button_text))
    keyboard.add(types.KeyboardButton("–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"))
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–æ–≤–∞—Ä–∞–º–∏
    text = (
        "üõí –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω!\n"
        f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {profile['gold']} –∑–æ–ª–æ—Ç–∞\n"
        "–í—ã–±–µ—Ä–∏ —Ç–æ–≤–∞—Ä –¥–ª—è –ø–æ–∫—É–ø–∫–∏:"
    )
    bot.send_message(message.chat.id, text, reply_markup=keyboard)

@bot.message_handler(func=lambda m: any(item["name"] in m.text for item in [
    {"name": "‚ö° –≠–Ω–µ—Ä–≥–∏—è"}, {"name": "üî© –ñ–µ–ª–µ–∑–æ"}, {"name": "üü† –ú–µ–¥—å"}]))
def buy_item(message):
    profile = get_profiles(message.from_user.id, profiles)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π —Ç–æ–≤–∞—Ä –≤—ã–±—Ä–∞–Ω
    if "‚ö° –≠–Ω–µ—Ä–≥–∏—è" in message.text:
        item = {"name": "‚ö° –≠–Ω–µ—Ä–≥–∏—è", "price": 10, "resource": "energy", "amount": 5}
    elif "üî© –ñ–µ–ª–µ–∑–æ" in message.text:
        item = {"name": "üî© –ñ–µ–ª–µ–∑–æ", "price": 15, "resource": "iron", "amount": 3}
    elif "üü† –ú–µ–¥—å" in message.text:
        item = {"name": "üü† –ú–µ–¥—å", "price": 20, "resource": "copper", "amount": 2}
    else:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: —Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –∫—É–ø–∏—Ç—å —Ç–æ–≤–∞—Ä
    if profile["gold"] < item["price"]:
        bot.send_message(
            message.chat.id,
            f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞!\n"
            f"üí∞ –ù—É–∂–Ω–æ: {item['price']} –∑–æ–ª–æ—Ç–∞\n"
            f"üí∞ –£ —Ç–µ–±—è: {profile['gold']} –∑–æ–ª–æ—Ç–∞"
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ —ç–Ω–µ—Ä–≥–∏—é (–Ω–µ –±–æ–ª–µ–µ 50)
    if item["resource"] == "energy" and (profile["energy"] + item["amount"]) > 50:
        bot.send_message(
            message.chat.id,
            f"‚ùå –ù–µ–ª—å–∑—è –∫—É–ø–∏—Ç—å –±–æ–ª—å—à–µ 50 —ç–Ω–µ—Ä–≥–∏–∏!\n"
            f"‚ö° –£ —Ç–µ–±—è —É–∂–µ: {profile['energy']} —ç–Ω–µ—Ä–≥–∏–∏\n"
        )
        return
    
    # –ü–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–∞
    profile["gold"] -= item["price"]
    profile[item["resource"]] += item["amount"]
    update_profiles(message.from_user.id, "gold", profile["gold"], profiles)
    update_profiles(message.from_user.id, item["resource"], profile[item["resource"]], profiles)
    
    bot.send_message(
        message.chat.id,
        f"üì¶ –ü–æ–ª—É—á–µ–Ω–æ: {item['amount']} {item['name']}\n"
        f"üí∞ –û—Å—Ç–∞—Ç–æ–∫ –∑–æ–ª–æ—Ç–∞: {profile['gold']}"
    )
    
if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    bot.polling(none_stop=True)